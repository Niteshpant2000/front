{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RestService {\n  constructor(http) {\n    this.http = http;\n    this.strUrl = \"http://127.0.0.1:8082/api/data\"; // url where the backend server is running ,  \n  }\n  //get inventory\n  getAllInventory() {\n    return this.http.get(this.strUrl + '/getInventory');\n  }\n  //get product by product-id\n  getInventoryById(id) {\n    return this.http.get(this.strUrl + '/getInventory/' + id);\n  }\n  // add a new product \n  addProduct(invObj) {\n    const headers = {\n      'content-type': 'application/json'\n    };\n    const body = JSON.stringify(invObj);\n    console.log(body);\n    return this.http.post(this.strUrl + '/addProduct', body, {\n      'headers': headers\n    });\n  }\n  // update inventory\n  updateInventory(invObj) {\n    let editUrl = this.strUrl + \"/updateInventory\";\n    return this.http.put(editUrl, invObj);\n  }\n  // delete a product\n  removeProduct(id) {\n    return this.http.delete(this.strUrl + '/removeProduct' + id);\n  }\n  //get Employees\n  getEmployee() {\n    return this.http.get(this.strUrl + '/getEmployee');\n  }\n  //get employee by emp-id\n  getEmployeeById(id) {\n    return this.http.get(this.strUrl + '/getEmployee/' + id);\n  }\n  // add a new employee \n  addEmployee(cashier) {\n    const headers = {\n      'content-type': 'application/json'\n    };\n    const body = JSON.stringify(cashier);\n    console.log(body);\n    return this.http.post(this.strUrl + '/addEmployee', body, {\n      'headers': headers\n    });\n  }\n  // update employee details\n  updateEmployee(cahier) {\n    let editUrl = this.strUrl + \"/updateEmployee\";\n    return this.http.put(editUrl, cahier);\n  }\n  //delete an employee\n  deleteEmployeee(id) {\n    let deleteUrl = this.strUrl + '/removeEmployee/' + id;\n    return this.http.delete(deleteUrl);\n  }\n  //add Customer\n  addCustomer(customer) {\n    const headers = {\n      'content-type': 'application/json'\n    };\n    const body = JSON.stringify(customer);\n    console.log(body);\n    return this.http.post(this.strUrl + '/addCustomer', body, {\n      'headers': headers\n    });\n  }\n  //get all Customers\n  getCustomer() {\n    return this.http.get(this.strUrl + '/getCustomer');\n  }\n  //add billing details to transactions\n  addTransaction(transaction) {\n    const headers = {\n      'content-type': 'application/json'\n    };\n    const body = JSON.stringify(transaction);\n    console.log(body);\n    return this.http.post(this.strUrl + '/addTransaction', body, {\n      'headers': headers\n    });\n  }\n}\nRestService.ɵfac = function RestService_Factory(t) {\n  return new (t || RestService)(i0.ɵɵinject(i1.HttpClient));\n};\nRestService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RestService,\n  factory: RestService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["RestService","constructor","http","getAllInventory","get","strUrl","getInventoryById","id","addProduct","invObj","headers","body","JSON","stringify","console","log","post","updateInventory","editUrl","put","removeProduct","delete","getEmployee","getEmployeeById","addEmployee","cashier","updateEmployee","cahier","deleteEmployeee","deleteUrl","addCustomer","customer","getCustomer","addTransaction","transaction","factory","providedIn"],"sourceRoot":"","sources":["D:\\front\\src\\app\\services\\rest.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Cashier } from '../pojos/Cashier';\r\nimport { Customer } from '../pojos/Customer';\r\nimport { Inventory } from '../pojos/Inventory';\r\nimport { Transaction } from '../pojos/Transaction';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RestService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  strUrl : string = \"http://127.0.0.1:8082/api/data\"  // url where the backend server is running ,  \r\n\r\n  //get inventory\r\n  getAllInventory():Observable<any>{\r\n    return this.http.get(this.strUrl + '/getInventory');\r\n  }\r\n\r\n  //get product by product-id\r\n  getInventoryById(id: number): Observable<any> {\r\n    return this.http.get(this.strUrl + '/getInventory/' + id);\r\n  }\r\n\r\n\r\n  // add a new product \r\n  addProduct(invObj: Inventory): Observable<any> {\r\n    const headers = { 'content-type': 'application/json' };\r\n    const body = JSON.stringify(invObj);\r\n    console.log(body);\r\n    return this.http.post(this.strUrl + '/addProduct', body, { 'headers': headers });\r\n  }\r\n\r\n  // update inventory\r\n  updateInventory(invObj: Inventory): Observable<any> {\r\n    let editUrl = this.strUrl + \"/updateInventory\";\r\n    return this.http.put(editUrl, invObj);\r\n  }\r\n\r\n  // delete a product\r\n  removeProduct(id: number): Observable<any>{\r\n    return this.http.delete(this.strUrl + '/removeProduct' + id);\r\n  }\r\n\r\n  //get Employees\r\n  getEmployee():Observable<any>{\r\n    return this.http.get(this.strUrl + '/getEmployee');\r\n  }\r\n\r\n  //get employee by emp-id\r\n  getEmployeeById(id: number): Observable<any> {\r\n    return this.http.get(this.strUrl + '/getEmployee/' + id);\r\n  }\r\n\r\n\r\n  // add a new employee \r\n  addEmployee(cashier: Cashier): Observable<any> {\r\n    const headers = { 'content-type': 'application/json' };\r\n    const body = JSON.stringify(cashier);\r\n    console.log(body);\r\n    return this.http.post(this.strUrl + '/addEmployee', body, { 'headers': headers });\r\n  }\r\n\r\n  // update employee details\r\n  updateEmployee(cahier: Cashier): Observable<any> {\r\n    let editUrl = this.strUrl + \"/updateEmployee\";\r\n    return this.http.put(editUrl, cahier);\r\n  }\r\n\r\n  //delete an employee\r\n  deleteEmployeee(id: number): Observable<any> {\r\n    let deleteUrl = this.strUrl + '/removeEmployee/' + id;\r\n    return this.http.delete(deleteUrl);\r\n  }\r\n\r\n  //add Customer\r\n  addCustomer(customer: Customer): Observable<any> {\r\n    const headers = { 'content-type': 'application/json' };\r\n    const body = JSON.stringify(customer);\r\n    console.log(body);\r\n    return this.http.post(this.strUrl + '/addCustomer', body, { 'headers': headers });\r\n  }\r\n\r\n  //get all Customers\r\n  getCustomer():Observable<any>{\r\n    return this.http.get(this.strUrl + '/getCustomer');\r\n  }\r\n  \r\n  //add billing details to transactions\r\n  addTransaction(transaction:Transaction): Observable<any> {\r\n    const headers = { 'content-type': 'application/json' };\r\n    const body = JSON.stringify(transaction);\r\n    console.log(body);\r\n    return this.http.post(this.strUrl + '/addTransaction', body, { 'headers': headers });\r\n  }\r\n\r\n  //login\r\n  // login(loginObj: any): Observable<any> {\r\n  //   const headers = { 'content-type': 'application/json' };\r\n\r\n  //   const body = JSON.stringify(loginObj)\r\n  //   return this.http.post(this.strUrl + '/login', body, { 'headers': headers, 'responseType': 'text' })\r\n  // }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}